# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GOOS:   'windows' # OS to build binaries for
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePathBase: '$(GOPATH)/src/github.com' # Path to the module's code
  package: 'github.com/Microsoft/hcsshim/cmd/runhcs'

steps:
- script: |
    export sourceRepoName=$(wget -O - 'https://api.github.com/repos/$(build.repository.name)' | jq -r .source.full_name)
    echo "##vso[task.setvariable variable=modulePath]$(modulePathBase)/$sourceRepoName"
  displayName: 'Set modulePath'

- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go build -v $(package)
  displayName: 'Get dependencies, then build'

- script: |
    ls '$(system.defaultWorkingDirectory)

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'runhcs'
    targetPath: '$(system.defaultWorkingDirectory)/runhcs.exe'